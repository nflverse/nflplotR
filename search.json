[{"path":[]},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team hello@dynastyprocess.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://nflplotr.nflverse.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Many hands make light work! ways can contribute project:","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":"open-an-issue","dir":"","previous_headings":"","what":"Open an issue","title":"Contributing","text":"can open issue ’d like request specific function report bug/error.","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). can also bring changes nflverse discord team happy discuss!","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"Contributing","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://nflplotr.nflverse.com/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note usethis project released Contributor Code Conduct. contributing project agree abide terms. contribution guidelines inspired guidelines {usethis}","code":""},{"path":"https://nflplotr.nflverse.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Sebastian Carl Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"team-logos-wordmarks","dir":"Articles","previous_headings":"","what":"Team Logos & Wordmarks","title":"nflplotR & the gt Package","text":"functions gt_nfl_logos() gt_nfl_wordmarks() come powerful locations argument allows usage gt selection helpers. create example dataframe show works. example dataframe gt table without formatting. column row_group_column intended serve row group variable let’s apply . also like render images stub, .e. rownames tell gt row_name_column. final table. valid NFL abbreviations cell body, row group labels stub. can now use nflplotR render images instead abbreviations.","code":"df <- data.frame(   row_group_column = c(\"AFC\", \"NFC\", \"AFC\", \"NFC\"),   row_name_column = c(\"LAC\", \"SEA\"),   column_a = 11:12,   column_b = c(\"KC\", \"LA\") ) gt::gt(df) gt::gt(df, groupname_col = \"row_group_column\") example_table <- gt::gt(   df,    groupname_col = \"row_group_column\",    rowname_col = \"row_name_column\" ) |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   ) example_table"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"cell-body","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Cell Body","title":"nflplotR & the gt Package","text":"render images cell body, .e. rows table, can either use columns argument appropriate locations helper. Please note, locations helper allow selectively apply function set rows","code":"example_table |>    nflplotR::gt_nfl_logos(columns = \"column_b\") example_table |>    nflplotR::gt_nfl_logos(locations = gt::cells_body(rows = gt::starts_with(\"LAC\")))"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"row-group-label","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Row Group Label","title":"nflplotR & the gt Package","text":"Rendering images outside cell body always require appropriate call locations argument. columns argument handle anything outside cell bodies.","code":"example_table |>    nflplotR::gt_nfl_logos(locations = gt::cells_row_groups())"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"stub","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Stub","title":"nflplotR & the gt Package","text":"Now like convert rownames images.","code":"example_table |>    nflplotR::gt_nfl_wordmarks(locations = gt::cells_stub())"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"column-spanners","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Column Spanners","title":"nflplotR & the gt Package","text":"use another table demonstrate convert team names logos wordmarks column spanners. logos now mix logo wordmark","code":"df <- data.frame(a = 3, b = 4, c = 5, d = 6)  df |>    gt::gt() |>    gt::tab_spanner(\"KC\", c(a, b)) |>    gt::tab_spanner(\"LAC\", c(c, d)) |>    nflplotR::gt_nfl_logos(locations = gt::cells_column_spanners()) df <- data.frame(a = 3, b = 4, c = 5, d = 6)  df |>    gt::gt() |>    gt::tab_spanner(\"KC\", c(a, b)) |>    gt::tab_spanner(\"LAC\", c(c, d)) |>    nflplotR::gt_nfl_logos(locations = gt::cells_column_spanners(\"KC\")) |>    nflplotR::gt_nfl_wordmarks(locations = gt::cells_column_spanners(\"LAC\"))"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"combine-all-together","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Combine all together","title":"nflplotR & the gt Package","text":"locations argument allows multiple locations one call wrapping list.","code":"example_table |>    nflplotR::gt_nfl_wordmarks(locations = gt::cells_stub()) |>    nflplotR::gt_nfl_logos(     locations = list(       gt::cells_body(), gt::cells_row_groups()     )   )"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"how-about-column-labels","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"How about Column Labels?","title":"nflplotR & the gt Package","text":"Well…’s complicated, gt behaves inconsistent opinion. actually correct way call nflplotR::gt_nfl_logos nflplotR::gt_nfl_wordmarks locations argument set gt::cells_column_labels(). Currently, wouldn’t render images column labels discussed linked issue. However, convenient workaround, nflplotR supports logos wordmarks column labels gt_nfl_cols_label(). LOGOS: WORDMARKS (note non matches remain unchanged): HEADSHOTS:","code":"teams <- nflplotR::valid_team_names() |> head(6) df <- cbind(1, 2, 3, 4, 5, 6) |>    as.data.frame() |>    rlang::set_names(teams)  gt::gt(df) |>    nflplotR::gt_nfl_cols_label() |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   ) gt::gt(df) |>    nflplotR::gt_nfl_cols_label(type = \"wordmark\") |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   ) headshot_df <- data.frame(   \"00-0036355\" = 1,    \"00-0033873\" = 2,   check.names = FALSE ) gt::gt(headshot_df) |>    nflplotR::gt_nfl_cols_label(type = \"headshot\") |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   )"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"logos-and-wordmarks-rendered-by-nflplotr","dir":"Articles","previous_headings":"Team Logos & Wordmarks","what":"Logos and Wordmarks Rendered by nflplotR","title":"nflplotR & the gt Package","text":"example creates table renders team logos wordmarks. split table 2 x 16 rows avoid overly long table convert variables starting “logo” logos variables starting “wordmark” wordmarks.","code":"teams <- nflplotR::valid_team_names() # remove conference logos from this example teams <- teams[!teams %in% c(\"AFC\", \"NFC\", \"NFL\")] # create dataframe with all 32 team names df <- data.frame(   team_a = head(teams, 16),   logo_a = head(teams, 16),   wordmark_a = head(teams, 16),   team_b = tail(teams, 16),   logo_b = tail(teams, 16),   wordmark_b = tail(teams, 16) ) # create gt table and translate team names to logo/wordmark images df |>   gt::gt() |>   nflplotR::gt_nfl_logos(columns = gt::starts_with(\"logo\")) |>   nflplotR::gt_nfl_wordmarks(columns = gt::starts_with(\"wordmark\")) |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   )"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"player-headshots","dir":"Articles","previous_headings":"","what":"Player Headshots","title":"nflplotR & the gt Package","text":"applies gt_nfl_headshots() well. need gsis ID.","code":"df <- data.frame(   A = c(\"00-0036355\", \"00-0033873\"),   B = c(\"00-0033077\", \"00-0035228\") )  df |>   gt::gt() |>    nflplotR::gt_nfl_headshots(columns = gt::everything(), height = 50) |>    # align the complete table left   gt::tab_options(     table.align = \"left\"   )"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"add-context-to-data-values","dir":"Articles","previous_headings":"","what":"Add Context to Data Values","title":"nflplotR & the gt Package","text":"presenting data, whether tables forms, context matters. example, explain layperson NFL quarterback completion rate 80%, able interpret value without context. average, average, incredible record? various ways add context tables. Statistically, particular value can classified well specifying empirical quantile (usually given percentile). percentiles determined, one can use gt::cols_merge_n_pct, example, add context (percentile) value. complex styles can implemented using pattern argument gt::cols_merge. chapter introduces another method graphically representing quantiles tables. basic idea “progress bar” rendered filled 0% 100%, depending empirical quantile. Let’s take look examples .","code":""},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"example-data","dir":"Articles","previous_headings":"Add Context to Data Values","what":"Example Data","title":"nflplotR & the gt Package","text":"","code":"df <- data.frame(   letters = sample(LETTERS, 10, TRUE),   value = sample(100:500, 10, FALSE),   pctl = rev(c(0, 1, 5, 10, 20, 45, 50, 75, 98, 100)) )"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"the-inline-percentage-bar","dir":"Articles","previous_headings":"Add Context to Data Values","what":"The Inline Percentage Bar","title":"nflplotR & the gt Package","text":"default, bar inserted value printed inside bar. set hide_col_pct (default) make easier understand filling corresponds values pctl. doesn’t really look good values aren’t aligned bars short. let’s change column width look . bars look better notice values aligned right inside filled bars. important information can use improve style. Now let’s align left apply left side padding: Two annoying things remain. values corresponding small percentiles overlap bars small percentiles (see pctl <= 5) overlap outline. can fix overlapping values bars applying separate padding values every percentile (function arguments gt_pct_bar vectorized). Rendering short percentile bars can messed border radius bar, see bars overlapping outline. let’s try fix ","code":"gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE   ) gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE   ) |>    gt::cols_width(value ~ gt::px(200)) gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_padding_left = \"10px\"   ) |>    gt::cols_width(value ~ gt::px(200)) |>    gt::cols_align(\"left\", \"value\") gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_padding_left = ifelse(df$pctl < 25, \"110%\", \"10px\"),     fill_border.radius = \"3px\",     background_border.radius = \"5px\"   ) |>    gt::cols_width(value ~ gt::px(200)) |>    gt::cols_align(\"left\", \"value\")"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"the-extra-percentage-bar","dir":"Articles","previous_headings":"Add Context to Data Values","what":"The Extra Percentage Bar","title":"nflplotR & the gt Package","text":"alternative inline percentage bar, can also place bar text. gt_pct_bar controls via value_position argument. approach allows significantly flatter design bars, text printed outside bar.","code":"gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_position = \"above\",     # with value_position = \"above\", we need an absolute value of bar heights!     background_fill.height = \"5px\",     background_fill.color = \"LightGray\"   ) |>    gt::cols_width(value ~ gt::px(100)) |>    gt::cols_align(\"center\", \"value\")"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"integrated-color-scales","dir":"Articles","previous_headings":"Add Context to Data Values","what":"Integrated Color Scales","title":"nflplotR & the gt Package","text":"gt_pct_bar can work color palette (= vector color names allowed html). also comes 3 integrated palettes named “hulk”, “hulk_teal”, “blue_orange”. default “hulk” palette used examples. ’ll look color scales. example integrated “hulk_teal” color scale. another example integrated “blue_orange” color scale.","code":"gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_padding_left = ifelse(df$pctl < 25, \"110%\", \"10px\"),     fill_border.radius = \"3px\",     background_border.radius = \"5px\",     fill_palette = \"hulk_teal\"   ) |>    gt::cols_width(value ~ gt::px(200)) |>    gt::cols_align(\"left\", \"value\") gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_padding_left = ifelse(df$pctl < 25, \"110%\", \"10px\"),     fill_border.radius = \"3px\",     background_border.radius = \"5px\",     fill_palette = \"blue_orange\"   ) |>    gt::cols_width(value ~ gt::px(200)) |>    gt::cols_align(\"left\", \"value\")"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"advanced-styling","dir":"Articles","previous_headings":"Add Context to Data Values","what":"Advanced Styling","title":"nflplotR & the gt Package","text":"gt_pct_bar supports advanced styling background bar (background_style.props), fill bar (fill_style.props), text (text_style.props) via named lists form list(property = value). possible pass every style property lists supported html. example overwrite text color red change font weight bold font. Values property lists overwrite default values.","code":"gt::gt(df) |>    nflplotR::gt_pct_bar(     \"value\", \"pctl\",     hide_col_pct = FALSE,     value_position = \"above\",     background_fill.height = \"5px\",     background_fill.color = \"LightGray\",     value_style.props = list(       color = \"red\", \"font-weight\" = 900     )   ) |>    gt::cols_width(value ~ gt::px(100)) |>    gt::cols_align(\"center\", \"value\")"},{"path":"https://nflplotr.nflverse.com/articles/gt.html","id":"isnt-this-already-available-in-gtextras","dir":"Articles","previous_headings":"Add Context to Data Values","what":"Isn’t this Already Available in gtExtras?","title":"nflplotR & the gt Package","text":"great Thomas Mock implemented function gt_plt_bar_pct {gtExtras} package. first glance appears function exactly thing nflplotR::gt_pct_bar, significant differences. main differences include: nflplotR supports full control styling 3 components (background, fill, text). hard code property. nflplotR prints value another column top bar provide context. nflplotR supports vectors colors fill text implement color scales. nflplotR manipulate gt options like alignment column width. gtExtras support value_position = \"\" functionality described previous sections. Basically, gtExtras::gt_plt_bar_pct special case nflplotR::gt_pct_bar, can reproduced correct styling. See Tom’s example reproduced nflplotR .","code":"data <- data.table::data.table(x = seq(1, 100, length.out = 6))  data <- data[, `:=`(x_unscaled = x, x_scaled = paste0(x / max(x) * 100, \"%\"))] gt::gt(data) |>    nflplotR::gt_pct_bar(     \"x_unscaled\", \"x_unscaled\",     background_fill.color = \"#e1e1e1\",     background_border.radius = \"0px\",     background_border.color = \"transparent\",     fill_palette = \"forestgreen\",     fill_border.radius = \"0px\",     value_colors = \"transparent\"   ) |>    nflplotR::gt_pct_bar(     \"x_scaled\", \"x\",     background_fill.color = \"#e1e1e1\",     background_border.radius = \"0px\",     background_border.color = \"transparent\",     fill_palette = \"Purple\",     fill_border.radius = \"0px\",     value_style.props = list(       \"color\" = c(rep(\"black\", 2), rep(\"white\", 4)),       \"font-weight\" = \"bold\"     ),     value_padding_left = ifelse(data$x <= 21, \"110%\", \"10px\")   ) |>    gt::cols_width(gt::ends_with(\"scaled\") ~ gt::px(100)) |>    gt::cols_align(\"left\", gt::ends_with(\"scaled\"))"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"preface","dir":"Articles","previous_headings":"","what":"Preface","title":"Get Started with nflplotR","text":"Working publicly available NFL data often results desire visualize findings one’s analyses (often ggplot2) publish visualizations. team-level analyses, appears visualizations aesthetically pleasing logos used instead team abbreviations. Another way visually distinguish teams use primary secondary team colors. nflplotR provides ggplot2 extensions greatly simplify tasks avoid typical problems. Long story short: thing required use NFL team logos team colors ggplot variable plot data holds official NFL team abbreviations.","code":""},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"install-the-package","dir":"Articles","previous_headings":"","what":"Install the Package","title":"Get Started with nflplotR","text":"easiest way get nflplotR install CRAN : get bug fix use feature development version, can install development version nflplotR either GitHub : prebuilt development repo :","code":"install.packages(\"nflplotR\") if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"nflverse/nflplotR\") install.packages(\"nflplotR\", repos = \"https://nflverse.r-universe.dev\")"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"typical-use-cases","dir":"Articles","previous_headings":"","what":"Typical Use Cases","title":"Get Started with nflplotR","text":"Let’s look typical use cases nflplotR using NFL play--play data. first step load necessary packages. load data compute team’s offensive defensive EPA per play 2020 regular season. also compute top 10 Quarterbacks EPA per play.","code":"library(nflplotR) library(ggplot2) library(gt) library(nflreadr) library(dplyr, warn.conflicts = FALSE) options(nflreadr.verbose = FALSE) pbp <- nflreadr::load_pbp(2020) |>    dplyr::filter(season_type == \"REG\") |>   dplyr::filter(!is.na(posteam) & (rush == 1 | pass == 1))  offense <- pbp |>   dplyr::group_by(team = posteam) |>   dplyr::summarise(off_epa = mean(epa, na.rm = TRUE))  defense <- pbp |>   dplyr::group_by(team = defteam) |>   dplyr::summarise(def_epa = mean(epa, na.rm = TRUE))  combined <- offense |>   dplyr::inner_join(defense, by = \"team\")  qbs <- pbp |>   dplyr::filter(pass == 1 | rush == 1) |>   dplyr::filter(down %in% 1:4) |>   dplyr::group_by(id) |>   dplyr::summarise(     name = dplyr::first(name),     team = dplyr::last(posteam),     plays = dplyr::n(),     qb_epa = mean(qb_epa, na.ram = TRUE)   ) |>   dplyr::filter(plays > 200) |>   dplyr::slice_max(qb_epa, n = 10)"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"logos-in-scatter-plots","dir":"Articles","previous_headings":"Typical Use Cases","what":"Logos in Scatter Plots","title":"Get Started with nflplotR","text":"Offensive Defensive EPA per Play typically used NFL team tiers. Let’s create scatter plot play around capabilities logo geom.  lot going : add mean lines x-axis y-axis single line, add team logos printed correct aspect ratio regardless plot dimensions add alpha channel team logos (can also done inside aesthetic means can differ team). like highlight just teams? Well, multiple ways . Either set alpha channel irrelevant teams lower give color (). Wait…color? Yes, possible overwrite color logos keep shape! Let’s next example. like highlight NFC East Teams specific reason…  Please note usage special color character \"b/w\" sets colors black white add ggplot2::scale_alpha_identity() ggplot2::scale_color_identity() plot case using alphas colors aesthetics want use actual alpha color values data set random defaults! just small overview recommended check examples provided function.","code":"ggplot2::ggplot(combined, aes(x = off_epa, y = def_epa)) +   ggplot2::geom_abline(slope = -1.5, intercept = seq(0.4, -0.3, -0.1), alpha = .2) +   nflplotR::geom_mean_lines(aes(x0 = off_epa , y0 = def_epa)) +   nflplotR::geom_nfl_logos(aes(team_abbr = team), width = 0.065, alpha = 0.7) +   ggplot2::labs(     x = \"Offense EPA/play\",     y = \"Defense EPA/play\",     caption = \"Data: @nflfastR\",     title = \"2020 NFL Offensive and Defensive EPA per Play\"   ) +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\")   ) +   ggplot2::scale_y_reverse() nfc_east <- c(\"DAL\", \"NYG\", \"PHI\", \"WAS\")  combined |>   dplyr::mutate(     colour = ifelse(team %in% nfc_east, NA, \"b/w\"),     alpha = ifelse(team %in% nfc_east, 0.9, 0.2)   ) |>   ggplot2::ggplot(aes(x = off_epa, y = def_epa)) +   ggplot2::geom_abline(slope = -1.5, intercept = seq(0.4, -0.3, -0.1), alpha = .2) +   nflplotR::geom_mean_lines(aes(x0 = off_epa , y0 = def_epa)) +   nflplotR::geom_nfl_logos(aes(team_abbr = team, alpha = alpha, colour = colour), width = 0.065) +   ggplot2::labs(     x = \"Offense EPA/play\",     y = \"Defense EPA/play\",     caption = \"Data: @nflfastR\",     title = \"2020 NFL Offensive and Defensive EPA per Play\"   ) +   ggplot2::scale_alpha_identity() +   ggplot2::scale_color_identity() +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\")   ) +   ggplot2::scale_y_reverse()"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"logos-as-axis-labels","dir":"Articles","previous_headings":"Typical Use Cases","what":"Logos as Axis Labels","title":"Get Started with nflplotR","text":"Let’s start offense build bar chart using logos axis labels team colors bar colors.  notes: color fill allow primary secondary team colors axis labels replaced logos setting axis.text.x.bottom = nflplotR::element_nfl_logo() ggplot2 theme call. can thing y-axis (now defensive EPA per play). Let’s make less intrusive changing color black white","code":"ggplot2::ggplot(offense, aes(x = team, y = off_epa)) +   ggplot2::geom_col(aes(color = team, fill = team), width = 0.5) +   nflplotR::scale_color_nfl(type = \"secondary\") +   nflplotR::scale_fill_nfl(alpha = 0.4) +   ggplot2::labs(     title = \"2020 NFL Offensive EPA per Play\",     y = \"Offense EPA/play\"   ) +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # it's obvious what the x-axis is so we remove the title     axis.title.x = ggplot2::element_blank(),     # this line triggers the replacement of team abbreviations with logos     axis.text.x.bottom = nflplotR::element_nfl_logo(size = 1)   ) ggplot2::ggplot(defense, aes(y = team, x = def_epa)) +   ggplot2::geom_col(aes(color = team, fill = team), width = 0.5) +   nflplotR::scale_color_nfl(type = \"secondary\") +   nflplotR::scale_fill_nfl(alpha = 0.4) +   ggplot2::labs(     title = \"2020 NFL Defensive EPA per Play\",     x = \"Defense EPA/play\"   ) +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # it's obvious what the y-axis is so we remove the title     axis.title.y = ggplot2::element_blank(),     # this line triggers the replacement of team abbreviations with logos     axis.text.y.left = nflplotR::element_nfl_logo(color = \"b/w\", size = 1)   )"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"player-headshots-as-axis-labels","dir":"Articles","previous_headings":"Typical Use Cases","what":"Player Headshots as Axis Labels","title":"Get Started with nflplotR","text":"Similar usage team logos axis labels, can also use player headshots. requirement valid NFL gsis ID used nflfastR play--play data.","code":"ggplot2::ggplot(qbs, aes(x = reorder(id, -qb_epa), y = qb_epa)) +   ggplot2::geom_col(aes(color = team, fill = team), width = 0.5) +   nflplotR::scale_color_nfl(type = \"secondary\") +   nflplotR::scale_fill_nfl(alpha = 0.4) +   ggplot2::labs(     title = \"2020 NFL Quarterback EPA per Play\",     y = \"EPA/play\"   ) +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # it's obvious what the x-axis is so we remove the title     axis.title.x = ggplot2::element_blank(),     # this line triggers the replacement of gsis ids with player headshots     axis.text.x.bottom = nflplotR::element_nfl_headshot(size = 1)   )"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"player-headshots-in-scatter-plots","dir":"Articles","previous_headings":"Typical Use Cases","what":"Player Headshots in Scatter Plots","title":"Get Started with nflplotR","text":"can example alternatively putting player image top columns use team logos axis labels instead.","code":"ggplot2::ggplot(qbs, aes(x = reorder(team, -qb_epa), y = qb_epa)) +   ggplot2::geom_col(aes(color = team, fill = team), width = 0.5) +   nflplotR::geom_nfl_headshots(aes(player_gsis = id), width = 0.075, vjust = 0.45) +   nflplotR::scale_color_nfl(type = \"secondary\") +   nflplotR::scale_fill_nfl(alpha = 0.4) +   ggplot2::labs(     title = \"2020 NFL Quarterback EPA per Play\",     y = \"EPA/play\"   ) +   ggplot2::ylim(0, 0.4) +   ggplot2::theme_minimal() +   ggplot2::theme(     plot.title = ggplot2::element_text(face = \"bold\"),     plot.title.position = \"plot\",     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # it's obvious what the x-axis is so we remove the title     axis.title.x = ggplot2::element_blank(),     # this line triggers the replacement of team abbreviations with logos     axis.text.x.bottom = nflplotR::element_nfl_logo(size = 1)   )"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"lets-play-with-wordmarks-and-other-images","dir":"Articles","previous_headings":"","what":"Let’s Play with Wordmarks and Other Images","title":"Get Started with nflplotR","text":"theme_elements presented powerful seems first sight. can replace text NFL logos, NFL wordmarks, NFL player headshots every position, ggplot can put text! can literally every image url internet. show , create dataframe example data add nfl team abbreviations player gsis ids. Now plot data facet team abbreviations.  valid team names facet titles image url caption. nflplotR can make images two simple lines theme() call.  want logos instead wordmarks…  maybe facet player use headshots…","code":"df <- mtcars |>    dplyr::mutate(     team = sample(c(\"LAC\", \"BUF\", \"DAL\", \"ARI\"), nrow(mtcars), TRUE),     player = sample(c(\"00-0033873\", \"00-0035228\", \"00-0036355\", \"00-0019596\"), nrow(mtcars), TRUE)   ) ggplot(df, aes(x = mpg, y = disp)) +   geom_point() +   facet_wrap(vars(team)) +   labs(     title = tools::toTitleCase(\"These are random teams and data\"),     subtitle = \"I just want to show how the nflplotR theme elements work\",     caption = \"https://github.com/nflverse/nflseedR/raw/master/man/figures/caption.png\"   ) +   theme_minimal() +   theme(     plot.title.position = \"plot\",     plot.title = ggplot2::element_text(face = \"bold\"),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     axis.title = element_blank()   ) ggplot(df, aes(x = mpg, y = disp)) +   geom_point() +   facet_wrap(vars(team)) +   labs(     title = tools::toTitleCase(\"These are random teams and data\"),     subtitle = \"I just want to show how the nflplotR theme elements work\",     caption = \"https://github.com/nflverse/nflseedR/raw/master/man/figures/caption.png\"   ) +   theme_minimal() +   theme(     plot.title.position = \"plot\",     plot.title = ggplot2::element_text(face = \"bold\"),     axis.title = element_blank(),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # make wordmarks of team abbreviations     strip.text = nflplotR::element_nfl_wordmark(size = 1),     # load image from url in caption     plot.caption = ggpath::element_path(hjust = 1, size = 0.4)   ) ggplot(df, aes(x = mpg, y = disp)) +   geom_point() +   facet_wrap(vars(team)) +   labs(     title = tools::toTitleCase(\"These are random teams and data\"),     subtitle = \"I just want to show how the nflplotR theme elements work\",     caption = \"https://github.com/nflverse/nflseedR/raw/master/man/figures/caption.png\"   ) +   theme_minimal() +   theme(     plot.title.position = \"plot\",     plot.title = ggplot2::element_text(face = \"bold\"),     axis.title = element_blank(),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # make wordmarks of team abbreviations     strip.text = nflplotR::element_nfl_logo(size = 1),     # load image from url in caption     plot.caption = ggpath::element_path(hjust = 1, size = 0.4)   ) ggplot(df, aes(x = mpg, y = disp)) +   geom_point() +   facet_wrap(vars(player)) +   labs(     title = tools::toTitleCase(\"These are random players and data\"),     subtitle = \"I just want to show how the nflplotR theme elements work\",     caption = \"https://github.com/nflverse/nflseedR/raw/master/man/figures/caption.png\"   ) +   theme_minimal() +   theme(     plot.title.position = \"plot\",     plot.title = ggplot2::element_text(face = \"bold\"),     axis.title = element_blank(),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\"),     # make wordmarks of team abbreviations     strip.text = nflplotR::element_nfl_headshot(size = 1),     # load image from url in caption     plot.caption = ggpath::element_path(hjust = 1, size = 0.4)   )"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"absolute-freedom-in-ggplot2","dir":"Articles","previous_headings":"","what":"Absolute Freedom in ggplot2","title":"Get Started with nflplotR","text":"One thing particularly hard implement ggplot, namely free arrangement image (e.g. logo) somewhere plot. help powerful theme_elements possible! need assign ggplot tag either image URL - terms nflplotR - team abbreviation player gsis_id. can convert tag theme_elements plot.tag corresponding image position anywhere plot.tag.position. Let’s try logo first:  Looks even better wordmarks:  can player headshots:","code":"ggplot(mtcars, aes(x = mpg, y = disp)) +   geom_point() +   labs(     title = tools::toTitleCase(\"These are random data\"),     subtitle = \"I just want to show how to place an NFL logo somewhere in the plot\",     tag = \"LAC\"   ) +   theme_minimal() +   theme(     plot.tag = nflplotR::element_nfl_logo(size = 2),     plot.tag.position = c(0.5, 0.85),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\")   ) ggplot(mtcars, aes(x = mpg, y = disp)) +   geom_point() +   labs(     title = tools::toTitleCase(\"These are random data\"),     subtitle = \"I just want to show how to place an NFL wordmark top right\",     tag = \"LAC\"   ) +   theme_minimal() +   theme(     plot.tag = nflplotR::element_nfl_wordmark(size = 5, hjust = 1, vjust = 1),     plot.tag.position = c(1, 1),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\")   ) ggplot(mtcars, aes(x = mpg, y = disp)) +   geom_point() +   labs(     title = tools::toTitleCase(\"These are random data\"),     subtitle = \"I just want to show how to place player headshot top right\",     tag = \"00-0036355\"   ) +   theme_minimal() +   theme(     plot.tag = nflplotR::element_nfl_headshot(size = 5, hjust = 1, vjust = 1),     plot.tag.position = c(1, 1),     plot.background = ggplot2::element_rect(fill = \"#F0F0F0\")   )"},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"nflplotr-and-the-gt-package","dir":"Articles","previous_headings":"","what":"nflplotR and the gt package","title":"Get Started with nflplotR","text":"See vignette(\"gt\").","code":""},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"how-about-speed-in-the-rstudio-preview-pane","dir":"Articles","previous_headings":"","what":"How about speed in the RStudio preview pane?","title":"Get Started with nflplotR","text":"used preview plots RStudio probably get bit impatient lot logos added plot rendering can take seconds. nflplotR function ggpreview() built . saves plot temporary png file previews (’s actual dimensions). Please see function documentation information.","code":""},{"path":"https://nflplotr.nflverse.com/articles/nflplotR.html","id":"i-want-this-for-college-football","dir":"Articles","previous_headings":"","what":"I Want this for College Football!","title":"Get Started with nflplotR","text":"Fortunately, nflplotR adapted college football released name cfbplotR.","code":""},{"path":"https://nflplotr.nflverse.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Carl. Author, maintainer.","code":""},{"path":"https://nflplotr.nflverse.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carl S (2025). nflplotR: NFL Logo Plots 'ggplot2' 'gt'. R package version 1.5.0.9002, https://nflplotr.nflverse.com.","code":"@Manual{,   title = {nflplotR: NFL Logo Plots in 'ggplot2' and 'gt'},   author = {Sebastian Carl},   year = {2025},   note = {R package version 1.5.0.9002},   url = {https://nflplotr.nflverse.com}, }"},{"path":"https://nflplotr.nflverse.com/index.html","id":"nflplotr-","dir":"","previous_headings":"","what":"nflplotR • Plot NFL Team Logos","title":"nflplotR • Plot NFL Team Logos","text":"goal nflplotR provide functions geoms help visualization NFL related analysis. provides ggplot2 geom heavy lifting plotting NFL logos high quality, correct aspect ratio possible transparency.","code":""},{"path":"https://nflplotr.nflverse.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"nflplotR • Plot NFL Team Logos","text":"easiest way get nflplotR install CRAN : get bug fix use feature development version, can install development version nflplotR either GitHub : prebuilt development repo :","code":"install.packages(\"nflplotR\") if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"nflverse/nflplotR\") install.packages(\"nflplotR\", repos = c(\"https://nflverse.r-universe.dev\", getOption(\"repos\")))"},{"path":"https://nflplotr.nflverse.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"nflplotR • Plot NFL Team Logos","text":"Please see Get Started nflplotR nflplotR & gt Package articles.","code":""},{"path":"https://nflplotr.nflverse.com/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"nflplotR • Plot NFL Team Logos","text":"best places get help package : nflverse discord (package well anything R/NFL related) opening issue","code":""},{"path":"https://nflplotr.nflverse.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"nflplotR • Plot NFL Team Logos","text":"Many hands make light work! ways can contribute project: can open issue ’d like request specific data report bug/error. ’d like contribute code, please check contribution guidelines.","code":""},{"path":"https://nflplotr.nflverse.com/index.html","id":"terms-of-use","dir":"","previous_headings":"","what":"Terms of Use","title":"nflplotR • Plot NFL Team Logos","text":"R code package released open source MIT License. NFL data accessed package belong respective owners, governed terms use.","code":""},{"path":"https://nflplotr.nflverse.com/reference/dot-nflplotR_clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear nflplotR Cache — .nflplotR_clear_cache","title":"Clear nflplotR Cache — .nflplotR_clear_cache","text":"function clears memoised cache functions memoised nflplotR.","code":""},{"path":"https://nflplotr.nflverse.com/reference/dot-nflplotR_clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear nflplotR Cache — .nflplotR_clear_cache","text":"","code":".nflplotR_clear_cache()"},{"path":"https://nflplotr.nflverse.com/reference/dot-nflplotR_clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear nflplotR Cache — .nflplotR_clear_cache","text":"Invisibly NULL","code":""},{"path":"https://nflplotr.nflverse.com/reference/dot-nflplotR_clear_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear nflplotR Cache — .nflplotR_clear_cache","text":"","code":".nflplotR_clear_cache() #> ✔ nflplotR cache cleared!"},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme Elements for Image Grobs — element","title":"Theme Elements for Image Grobs — element","text":"conjunction ggplot2::theme system, following element_ functions enable images non-data components plot, e.g. axis text. element_nfl_logo(): draws NFL team logos instead abbreviations. element_nfl_wordmark(): draws NFL team wordmarks instead abbreviations. element_nfl_headshot(): draws NFL player headshots instead GSIS IDs. ggpath::element_path():  draws images valid image URLs instead URL.","code":""},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme Elements for Image Grobs — element","text":"","code":"element_nfl_logo(   alpha = 1L,   colour = NA_character_,   hjust = 0.5,   vjust = 0.5,   color = NULL,   angle = 0,   size = grid::unit(0.5, \"cm\") )  element_nfl_wordmark(   alpha = 1L,   colour = NA_character_,   hjust = 0.5,   vjust = 0.5,   color = NULL,   angle = 0,   size = grid::unit(0.5, \"cm\") )  element_nfl_headshot(   alpha = 1L,   colour = NA_character_,   hjust = 0.5,   vjust = 0.5,   color = NULL,   angle = 0,   size = grid::unit(0.5, \"cm\") )"},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme Elements for Image Grobs — element","text":"alpha alpha channel, .e. transparency level, numerical value 0 1. 1L skips alpha channel modification speed. colour, color image colorized color. Defaults NA_character_ means change color . Use special character \"b/w\" set black white. information valid color names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill. hjust numeric vector specifying horizontal justification.     specified, overrides just setting. vjust numeric vector specifying vertical justification.     specified, overrides just setting. angle angle element numerical value 0° 360°. size output grob size grid::unit. given numeric, cm applied unit.","code":""},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme Elements for Image Grobs — element","text":"S7 object class element.","code":""},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme Elements for Image Grobs — element","text":"elements translate NFL team abbreviations NFL player GSIS IDs logo images player headshots, respectively.","code":""},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme Elements for Image Grobs — element","text":"","code":"# \\donttest{ library(nflplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AFC\", \"NFC\", \"NFL\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr )  # use logos for x-axis ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_nfl(type = \"secondary\") +   scale_fill_nfl(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x.bottom = element_nfl_logo())   # use logos for y-axis ggplot(df, aes(y = teams, x = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_nfl(type = \"secondary\") +   scale_fill_nfl(alpha = 0.4) +   theme_minimal() +   theme(axis.text.y.left = element_nfl_logo())   ############################################################################# # Headshot Examples ############################################################################# library(nflplotR) library(ggplot2)  # Silence an nflreadr message that is irrelevant here old <- options(nflreadr.cache_warning = FALSE)  dfh <- data.frame(   random_value = runif(9, 0, 1),   player_gsis = c(\"00-0033873\",                   \"00-0026498\",                   \"00-0035228\",                   \"00-0031237\",                   \"00-0036355\",                   \"00-0019596\",                   \"00-0033077\",                   \"00-0012345\",                   \"00-0031280\") )  # use headshots for x-axis ggplot(dfh, aes(x = player_gsis, y = random_value)) +   geom_col(width = 0.5) +   theme_minimal() +   theme(axis.text.x.bottom = element_nfl_headshot(size = 1)) #> ! No headshot available for gsis ID \"00-0012345\". Will insert placeholder.   # use headshots for y-axis ggplot(dfh, aes(y = player_gsis, x = random_value)) +   geom_col(width = 0.5) +   theme_minimal() +   theme(axis.text.y.left = element_nfl_headshot(size = 1)) #> ! No headshot available for gsis ID \"00-0012345\". Will insert placeholder.   # Restore old options options(old)  ############################################################################# # Wordmarks and other Images #############################################################################  library(ggplot2)  dt <- data.table::as.data.table(mtcars)[,   `:=`(     team = sample(c(\"LAC\", \"BUF\", \"DAL\", \"ARI\"), nrow(mtcars), TRUE),     player = sample(       c(\"00-0033873\", \"00-0035228\", \"00-0036355\", \"00-0019596\"),       nrow(mtcars),       TRUE     )   ) ]  ggplot(dt, aes(x = mpg, y = disp)) +   geom_point() +   facet_wrap(vars(team)) +   labs(     title = tools::toTitleCase(\"These are random teams and data\"),     subtitle = \"I just want to show how the nflplotR theme elements work\",     caption = \"https://github.com/nflverse/nflseedR/raw/master/man/figures/caption.png\"   ) +   theme_minimal() +   theme(     plot.title.position = \"plot\",     plot.title = element_text(face = \"bold\"),     axis.title = element_blank(),     # make wordmarks of team abbreviations     strip.text = element_nfl_wordmark(size = 1),     # load image from url in caption     plot.caption = element_path(hjust = 1, size = 0.4)   )  # }"},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"geom used plot images instead points ggplot. requires x, y aesthetics well path. outsourced ggpath re-exported nflplotR compatibility reasons.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"","code":"geom_from_path(...)"},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"... Arguments passed ggpath::geom_from_path mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"function outsourced ggpath package. See ggpath::geom_from_path details.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"geom_from_path() understands following aesthetics (required aesthetics default value): x x-coordinate. Required. y y-coordinate. Required. path file path, url, raster object bitmap array. See magick::image_read() information. Required. alpha = NULL alpha channel, .e. transparency level, numerical value 0 1. colour = NULL image colorized colour. Use special character \"b/w\" set black white. information valid colour names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill angle = 0 angle image numerical value 0° 360°. hjust = 0.5 horizontal adjustment relative given x coordinate. Must numerical value 0 1. vjust = 0.5 vertical adjustment relative given y coordinate. Must numerical value 0 1. width = 1.0 desired width image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size width = 0.1 (see examples). height = 1.0 desired height image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size height = 0.1 (see examples).","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_from_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"","code":"# example code  # \\donttest{ library(ggplot2) library(nflplotR)  # create x-y-coordinates of a pentagon and add nflverse logo urls df <- data.frame(   a = c(sin(2 * pi * (0:4) / 5), 0),   b = c(cos(2 * pi * (0:4) / 5), 0),   url = c(     \"https://github.com/nflverse/nflfastR/raw/master/man/figures/logo.png\",     \"https://github.com/nflverse/nflseedR/raw/master/man/figures/logo.png\",     \"https://github.com/nflverse/nfl4th/raw/master/man/figures/logo.png\",     \"https://github.com/nflverse/nflreadr/raw/main/data-raw/logo.svg\",     \"https://github.com/nflverse/nflplotR/raw/main/man/figures/logo.png\",     \"https://github.com/nflverse/nflverse/raw/main/man/figures/logo.png\"   ) )  # plot images directly from url ggplot(df, aes(x = a, y = b)) +   geom_from_path(aes(path = url), width = 0.15) +   coord_cartesian(xlim = c(-2, 2), ylim = c(-1.3, 1.5)) +   theme_void()   # plot images directly from url and apply transparency ggplot(df, aes(x = a, y = b)) +   geom_from_path(aes(path = url), width = 0.15, alpha = 0.5) +   coord_cartesian(xlim = c(-2, 2), ylim = c(-1.3, 1.5)) +   theme_void()   # It is also possible and recommended to use the underlying Geom inside a # ggplot2 annotation ggplot() +   annotate(     ggpath::GeomFromPath,     x = 0,     y = 0,     path = \"https://github.com/nflverse/nflplotR/raw/main/man/figures/logo.png\",     width = 0.4   ) +   theme_minimal()  # }"},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"geoms can used draw horizontal vertical reference lines ggplot. use data aesthetics x0 y0 compute median mean draw line.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"","code":"geom_median_lines(...)  geom_mean_lines(...)"},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"... Arguments passed ggpath::geom_mean_lines, ggpath::geom_median_lines mapping Set aesthetic mappings created aes(). data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behavior default plot specification.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"functions outsourced ggpath package. See ggpath::geom_median_lines ggpath::geom_mean_lines details.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"geom_median_lines() geom_mean_lines() understand following aesthetics (least one x0 y0 aesthetics required): x0 variable compute median/mean drawn vertical line. y0 variable compute median/mean drawn horizontal line. alpha = NA alpha channel, .e. transparency level, numerical value 0 1. color = \"red\" color drawn lines. linetype = 2 linetype drawn lines. linewidth = 0.5 width drawn lines.","code":""},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/geom_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Horizontal and Vertical Reference Lines — geom_lines","text":"","code":"library(ggplot2)  # inherit top level aesthetics ggplot(mtcars, aes(x = disp, y = mpg, y0 = mpg, x0 = disp)) +   geom_point() +   geom_median_lines() +   geom_mean_lines(color = \"blue\") +   theme_minimal()   # draw horizontal line only ggplot(mtcars, aes(x = disp, y = mpg, y0 = mpg)) +   geom_point() +   geom_median_lines() +   geom_mean_lines(color = \"blue\") +   theme_minimal()   # draw vertical line only ggplot(mtcars, aes(x = disp, y = mpg, x0 = disp)) +   geom_point() +   geom_median_lines() +   geom_mean_lines(color = \"blue\") +   theme_minimal()   # choose your own value ggplot(mtcars, aes(x = disp, y = mpg)) +   geom_point() +   geom_median_lines(x0 = 400, y0 = 15) +   geom_mean_lines(x0 = 150, y0 = 30, color = \"blue\") +   theme_minimal()"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"geom used plot NFL player headshots instead points ggplot. requires x, y aesthetics well valid NFL player gsis id.","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"","code":"geom_nfl_headshots(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"geom_nfl_headshots() understands following aesthetics (required aesthetics default value): x x-coordinate. Required. y y-coordinate. Required. player_gsis players' NFL gsis id. Required. alpha = NULL alpha channel, .e. transparency level, numerical value 0 1. colour = NULL image colorized colour. Use special character \"b/w\" set black white. information valid colour names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill angle = 0 angle image numerical value 0° 360°. hjust = 0.5 horizontal adjustment relative given x coordinate. Must numerical value 0 1. vjust = 0.5 vertical adjustment relative given y coordinate. Must numerical value 0 1. width = 1.0 desired width image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size width = 0.075 (see examples). height = 1.0 desired height image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size height = 0.1 (see examples).","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_headshots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing NFL Player Headshots — geom_nfl_headshots","text":"","code":"# \\donttest{ library(nflplotR) library(ggplot2) # Silence an nflreadr message that is irrelevant here old <- options(nflreadr.cache_warning = FALSE)  df <- data.frame(   a = rep(1:3, 3),   b = sort(rep(1:3, 3), decreasing = TRUE),   player_gsis = c(\"00-0033873\",                   \"00-0026498\",                   \"00-0035228\",                   \"00-0031237\",                   \"00-0036355\",                   \"00-0019596\",                   \"00-0033077\",                   \"00-0012345\",                   \"00-0031280\"),   player_name = c(\"P.Mahomes\",                   \"M.Stafford\",                   \"K.Murray\",                   \"T.Bridgewater\",                   \"J.Herbert\",                   \"T.Brady\",                   \"D.Prescott\",                   \"Non.Match\",                   \"D.Carr\") )  # set a custom fill colour for one player df$colour <- ifelse(df$a == 2 & df$b == 2, NA, \"b/w\")  # scatterplot of the headshots ggplot(df, aes(x = a, y = b)) +   geom_nfl_headshots(aes(player_gsis = player_gsis), height = 0.2) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   theme_void() #> ! No headshot available for gsis ID \"00-0012345\". Will insert placeholder.   # apply alpha as constant ggplot(df, aes(x = a, y = b)) +   geom_nfl_headshots(aes(player_gsis = player_gsis), height = 0.2, alpha = 0.5) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   theme_void() #> ! No headshot available for gsis ID \"00-0012345\". Will insert placeholder.   # apply colour as an aesthetic ggplot(df, aes(x = a, y = b)) +   geom_nfl_headshots(aes(player_gsis = player_gsis, colour = colour), height = 0.2) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   scale_colour_identity() +   theme_void() #> ! No headshot available for gsis ID \"00-0012345\". Will insert placeholder.   # Restore old options options(old) # }"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"geom used plot NFL team conference logos instead points ggplot. requires x, y aesthetics well valid NFL team abbreviation. latter can checked valid_team_names().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"","code":"geom_nfl_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"geom_nfl_logos() understands following aesthetics (required aesthetics default value): x x-coordinate. Required. y y-coordinate. Required. team_abbr team abbreviation. one valid_team_names(). function tries clean team names internally calling nflreadr::clean_team_abbrs(). Note: \"NFL\", \"AFC\", \"NFC\" valid abbreviations! Required. alpha = NULL alpha channel, .e. transparency level, numerical value 0 1. colour = NULL image colorized colour. Use special character \"b/w\" set black white. information valid colour names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill angle = 0 angle image numerical value 0° 360°. hjust = 0.5 horizontal adjustment relative given x coordinate. Must numerical value 0 1. vjust = 0.5 vertical adjustment relative given y coordinate. Must numerical value 0 1. width = 1.0 desired width image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size width = 0.075 (see examples). height = 1.0 desired height image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size height = 0.1 (see examples).","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing NFL Team Logos — geom_nfl_logos","text":"","code":"# \\donttest{ library(nflplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AFC\", \"NFC\", \"NFL\")]  df <- data.frame(   a = rep(1:8, 4),   b = sort(rep(1:4, 8), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_nfl_logos(aes(team_abbr = teams), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   expand_limits(y = c(0.9, 4.1)) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_nfl_logos(aes(team_abbr = teams, alpha = alpha), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   expand_limits(y = c(0.9, 4.1)) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_color_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_nfl_logos(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   expand_limits(y = c(0.9, 4.1)) +   scale_alpha_identity() +   scale_color_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_nfl_logos(aes(team_abbr = teams), width = 0.075, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   expand_limits(y = c(0.9, 4.1)) +   theme_void()   # it's also possible to plot NFL and conference logos dat <- data.frame(a = c(1.5, 1:2), b = c(1, 0, 0), teams = c(\"NFL\", \"AFC\", \"NFC\")) ggplot(dat, aes(x = a, y = b)) +   geom_nfl_logos(aes(team_abbr = teams), width = 0.25) +   coord_cartesian(xlim = c(0.5,2.5), ylim = c(-0.75, 1.75)) +   theme_void()  # }"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"geom used plot NFL team wordmarks instead points ggplot. requires x, y aesthetics well valid NFL team abbreviation. latter can checked valid_team_names().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"","code":"geom_nfl_wordmarks(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"geom_nfl_logos() understands following aesthetics (required aesthetics default value): x x-coordinate. Required. y y-coordinate. Required. team_abbr team abbreviation. one valid_team_names(). function tries clean team names internally calling nflreadr::clean_team_abbrs(). Required. alpha = NULL alpha channel, .e. transparency level, numerical value 0 1. colour = NULL image colorized colour. Use special character \"b/w\" set black white. information valid colour names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill angle = 0 angle image numerical value 0° 360°. hjust = 0.5 horizontal adjustment relative given x coordinate. Must numerical value 0 1. vjust = 0.5 vertical adjustment relative given y coordinate. Must numerical value 0 1. width = 1.0 desired width image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size width = 0.1 (see examples). height = 1.0 desired height image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size height = 0.1 (see examples).","code":""},{"path":"https://nflplotr.nflverse.com/reference/geom_nfl_wordmarks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing NFL Team Wordmarks — geom_nfl_wordmarks","text":"","code":"# \\donttest{ library(nflplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AFC\", \"NFC\", \"NFL\")]  df <- data.frame(   a = rep(1:8, 4),   b = sort(rep(1:4, 8), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all wordmarks ggplot(df, aes(x = a, y = b)) +   geom_nfl_wordmarks(aes(team_abbr = teams), width = 0.12) +   geom_label(aes(label = teams), nudge_y = -0.20, alpha = 0.5) +   scale_x_continuous(expand = expansion(add = 0.5)) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_nfl_wordmarks(aes(team_abbr = teams, alpha = alpha), width = 0.12) +   geom_label(aes(label = teams), nudge_y = -0.20, alpha = 0.5) +   scale_x_continuous(expand = expansion(add = 0.5)) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_color_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_nfl_wordmarks(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.12) +   geom_label(aes(label = teams), nudge_y = -0.20, alpha = 0.5) +   scale_x_continuous(expand = expansion(add = 0.5)) +   scale_alpha_identity() +   scale_color_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_nfl_wordmarks(aes(team_abbr = teams), width = 0.12, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.20, alpha = 0.5) +   scale_x_continuous(expand = expansion(add = 0.5)) +   theme_void()   # }"},{"path":"https://nflplotr.nflverse.com/reference/ggpreview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview ggplot in Specified Dimensions — ggpreview","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"function previews ggplot actual dimensions order see look saved. also significantly faster default preview RStudio ggplots created using nflplotR.","code":""},{"path":"https://nflplotr.nflverse.com/reference/ggpreview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"","code":"ggpreview(   plot = ggplot2::last_plot(),   width = NA,   height = NA,   asp = NULL,   dpi = 300,   device = \"png\",   units = c(\"in\", \"cm\", \"mm\", \"px\"),   scale = 1,   limitsize = TRUE,   bg = NULL,   ... )"},{"path":"https://nflplotr.nflverse.com/reference/ggpreview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"plot Plot save, defaults last plot displayed. width, height Plot size units expressed units argument. supplied, uses size current graphics device. asp aspect ratio plot calculated width / height. numeric value (NULL) height plot recalculated height = width / asp. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). applies converting pixel units, typical raster output types. device Device use. Can either device function (e.g. png), one \"eps\", \"ps\", \"tex\" (pictex), \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\" (windows ). NULL (default), device guessed based filename extension. units One following units width height arguments expressed: \"\", \"cm\", \"mm\" \"px\". scale Multiplicative scaling factor. limitsize TRUE (default), ggsave() save images larger 50x50 inches, prevent common error specifying dimensions pixels. bg Background colour. NULL, uses plot.background fill value plot theme. ... arguments passed graphics device function, specified device.","code":""},{"path":"https://nflplotr.nflverse.com/reference/ggpreview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"return value, called side effects.","code":""},{"path":"https://nflplotr.nflverse.com/reference/ggpreview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"","code":"library(nflplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AFC\", \"NFC\", \"NFL\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr )  # use logos for x-axis # note that the plot is assigned to the object \"p\" p <- ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_nfl(type = \"secondary\") +   scale_fill_nfl(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x = element_nfl_logo())  # preview p with defined width and aspect ratio (only available in RStudio) if (rstudioapi::isAvailable()){   ggpreview(p, width = 5, asp = 16/9) }"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_cols_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","title":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","text":"Translate NFL team abbreviations logos wordmarks NFL player gsis IDs player headshots render images column labels 'gt' tables.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_cols_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","text":"","code":"gt_nfl_cols_label(   gt_object,   columns = gt::everything(),   ...,   height = 30,   type = c(\"logo\", \"wordmark\", \"headshot\") )"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_cols_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","text":"gt_object table object created using gt::gt() function. columns columns image translation applied. Argument effect locations NULL. ... Currently use height absolute height (px) image table cell. type One \"logo\", \"wordmark\", \"headshot\" selecting whether render team's logo wordmark image, player's headshot.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_cols_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","text":"object class gt_tbl.","code":""},{"path":[]},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_cols_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Logos, Wordmarks, and Headshots in 'gt' Table Column Labels — gt_nfl_cols_label","text":"","code":"# \\donttest{ library(gt) label_df <- data.frame(   \"00-0036355\" = 1,   \"00-0033873\" = 2,   \"LAC\" = 11,   \"KC\" = 12,   check.names = FALSE )  # create gt table and translate player IDs and team abbreviations # into headshots, logos, and wordmarks table <- gt::gt(label_df) |>   nflplotR::gt_nfl_cols_label(     columns = gt::starts_with(\"00\"),     type = \"headshot\"   ) |>   nflplotR::gt_nfl_cols_label(\"LAC\", type = \"wordmark\") |>   nflplotR::gt_nfl_cols_label(\"KC\", type = \"logo\") # }"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_headshots.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","title":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","text":"Translate NFL player gsis IDs player headshots render images html tables 'gt' package.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_headshots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","text":"","code":"gt_nfl_headshots(gt_object, columns, height = 30, locations = NULL)"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_headshots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","text":"gt_object table object created using gt::gt() function. columns columns image translation applied. Argument effect locations NULL. height absolute height (px) image table cell. locations NULL (default), function render logos/wordmarks argument columns. Otherwise, cell set cells associated team name transformation. gt::cells_body(), gt::cells_stub(), gt::cells_column_labels(), gt::cells_row_groups() helper functions can used . can enclose several calls within list() wish make transformation happen different locations.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_headshots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","text":"object class gt_tbl.","code":""},{"path":[]},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_headshots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Player Headshots in 'gt' Tables — gt_nfl_headshots","text":"","code":"# \\donttest{ library(nflplotR) library(gt) # Silence an nflreadr message that is irrelevant here old <- options(nflreadr.cache_warning = FALSE) df <- data.frame(   player_gsis = c(\"00-0033873\",                   \"00-0026498\",                   \"00-0035228\",                   \"00-0031237\",                   \"00-0036355\",                   \"00-0019596\",                   \"00-0033077\",                   \"00-0012345\",                   \"00-0031280\"),   player_name = c(\"P.Mahomes\",                   \"M.Stafford\",                   \"K.Murray\",                   \"T.Bridgewater\",                   \"J.Herbert\",                   \"T.Brady\",                   \"D.Prescott\",                   \"Non.Match\",                   \"D.Carr\") )  # Replace player IDs with headshot images table <- gt(df) |>   gt_nfl_headshots(\"player_gsis\")  # Restore old options options(old) # }"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","title":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","text":"Translate NFL team abbreviations logos wordmarks render images html tables 'gt' package.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","text":"","code":"gt_nfl_logos(gt_object, columns, height = 30, locations = NULL)  gt_nfl_wordmarks(gt_object, columns, height = 30, locations = NULL)"},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","text":"gt_object table object created using gt::gt() function. columns columns image translation applied. Argument effect locations NULL. height absolute height (px) image table cell. locations NULL (default), function render logos/wordmarks argument columns. Otherwise, cell set cells associated team name transformation. gt::cells_body(), gt::cells_stub(), gt::cells_column_labels(), gt::cells_row_groups() helper functions can used . can enclose several calls within list() wish make transformation happen different locations.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","text":"object class gt_tbl.","code":""},{"path":[]},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/gt_nfl_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Logos and Wordmarks in 'gt' Tables — gt_nfl_logos","text":"","code":"# \\donttest{ library(gt) library(nflplotR) teams <- valid_team_names() # remove conference logos from this example teams <- teams[!teams %in% c(\"AFC\", \"NFC\", \"NFL\")] # create dataframe with all 32 team names df <- data.frame(   team_a = head(teams, 16),   logo_a = head(teams, 16),   wordmark_a = head(teams, 16),   team_b = tail(teams, 16),   logo_b = tail(teams, 16),   wordmark_b = tail(teams, 16) ) # create gt table and translate team names to logo/wordmark images table <- df |>   gt() |>   gt_nfl_logos(columns = gt::starts_with(\"logo\")) |>   gt_nfl_wordmarks(columns = gt::starts_with(\"wordmark\")) # }"},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"Add context data adding percentile bar actual values. percentile bar colored color scale based user supplied color palette relative width bars rendered tooltip.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"","code":"gt_pct_bar(   gt_tbl,   col_value,   col_pct,   ...,   rows = gt::everything(),   hide_col_pct = FALSE,   value_position = c(\"inline\", \"above\"),   value_scale = 1L,   value_padding_left = \"0px\",   value_padding_right = \"0px\",   value_colors = c(\"black\", \"white\"),   value_style.props = list(),   fill_palette = \"hulk\",   fill_palette.reverse = FALSE,   fill_na.color = \"#808080\",   fill_pct.domain = 0:100,   fill_border.color = \"transparent\",   fill_border.radius = \"10px\",   fill_height = \"100%\",   fill_style.props = list(),   background_border.color = \"thin solid black\",   background_border.radius = \"12px\",   background_fill.color = \"#b1b1b1\",   background_fill.width = \"100%\",   background_fill.height = \"100%\",   background_style.props = list() )"},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"gt_tbl table object created using gt::gt() function. col_value Column name value printed. col_pct Column name percentage values controlling fill width. 0 - 100 range, use value_scale scale . ... dots future extensions must empty. rows Rows target <row-targeting expression> // default: everything() conjunction columns, can specify rows form constraint extraction. default everything() results rows columns formatted. Alternatively, can supply vector row IDs within c(), vector row indices, select helper function (e.g. starts_with(), ends_with(), contains(), matches(), num_range(), everything()). can also use expressions filter rows need (e.g., [colname_1] > 100 & [colname_2] < 50). hide_col_pct TRUE, column col_pct hidden resulting table. value_position One following: \"inline\" : prints value inside bars \"\" : prints value bars value_scale scaling factor: values column col_pct multiplied value_scale proceeding. useful underlying data 0 - 1 range, instead required 0 - 100 range. value_padding_left Left padding printed text. value_padding_right Right padding printed text. value_colors One colors printed text. vector colors value_position = \"inline\", function calculate color contrast ratios colorspace::contrast_ratio , based , decide colors chose maximize readability. can overwrite resulting colos value_style.props. NOTE: uses colors fill_palette contrast ratio calculations background_fill.color trivial figure actual background text (overlap ). value_style.props named list form list(property = value) enhanced control html style property. can overwrite default properties set value_ arguments. fill_palette colors values mapped . can also one \"hulk\", \"hulk_teal\", \"blue_orange\" trigger internal color palettes. Argument passed scales::col_numeric. fill_palette.reverse Whether vector colors fill_palette reversed. Argument passed scales::col_numeric. fill_na.color Fill color case NA values. Argument passed scales::col_numeric. fill_pct.domain possible values colors fill_palette can mapped . fill_border.color Border color color filled area. fill_border.radius Border radius color filled area. fill_height height colored fill bar. correspond background_fill.height. defaults 100% make sure bar height matches text size printed value (value_position = \"inline\"). Please note value_position = \"inline\" requires absolute value fill_height, (e.g. 5px), otherwise render line. fill_style.props named list form list(property = value) enhanced control html style property. can overwrite default properties set fill_ arguments. background_border.color Border color background. background_border.radius Border radius background. background_fill.color Fill color background. background_fill.width Width background. background_fill.height height colored background bar. correspond fill_height. defaults 100% make sure bar height matches text size printed value (value_position = \"inline\"). Please note value_position = \"inline\" requires absolute value background_fill.height, (e.g. 5px), otherwise render line. background_style.props named list form list(property = value) enhanced control html style property. can overwrite default properties set background_ arguments.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"object class gt_tbl.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"function allows extensive styling bars text, either using default arguments , want full control, using *_style.props lists give full control style properties. styling parameters interpreted style properties html span tag. information CSS properties, see https://www.w3schools.com/cssref/index.php.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"some-notes-about-styling","dir":"Reference","previous_headings":"","what":"Some notes about styling","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"Since meant extension already existing 'gt' table, styling outside function, esp. horizontal alignment direction controlled gt::cols_align (see example). Make sure play around fill_border.radius background_border.radius. Results depend final column width percentiles. short percentile bars, .e. small values col_pct, might result bars crossing border combined big border radius. Text alignment depending colored bar easy one might think. Try percent values value_padding_left value_padding_right avoid overlapping text values outline colored bars. information examples, see article describes nflplotR works 'gt' package https://nflplotr.nflverse.com/articles/gt.html.","code":""},{"path":[]},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/gt_pct_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Columns of 'gt' Tables as Percentage Bars — gt_pct_bar","text":"","code":"library(data.table)  # Make a data.table of mtcars and select only disp and hp data <- data.table::as.data.table(mtcars)[, list(disp, hp)]  # Add the percentile of hp in the distribution of hp values data[, pct := round(stats::ecdf(hp)(hp) * 100, 1)] #>      disp    hp   pct #>     <num> <num> <num> #>  1: 160.0   110  43.8 #>  2: 160.0   110  43.8 #>  3: 108.0    93  21.9 #>  4: 258.0   110  43.8 #>  5: 360.0   175  68.8 #>  6: 225.0   105  31.2 #>  7: 360.0   245  93.8 #>  8: 146.7    62   6.2 #>  9: 140.8    95  25.0 #> 10: 167.6   123  53.1 #> 11: 167.6   123  53.1 #> 12: 275.8   180  78.1 #> 13: 275.8   180  78.1 #> 14: 275.8   180  78.1 #> 15: 472.0   205  81.2 #> 16: 460.0   215  84.4 #> 17: 440.0   230  87.5 #> 18:  78.7    66  15.6 #> 19:  75.7    52   3.1 #> 20:  71.1    65   9.4 #> 21: 120.1    97  28.1 #> 22: 318.0   150  59.4 #> 23: 304.0   150  59.4 #> 24: 350.0   245  93.8 #> 25: 400.0   175  68.8 #> 26:  79.0    66  15.6 #> 27: 120.3    91  18.8 #> 28:  95.1   113  46.9 #> 29: 351.0   264  96.9 #> 30: 145.0   175  68.8 #> 31: 301.0   335 100.0 #> 32: 121.0   109  34.4 #>      disp    hp   pct  # set seed to keep it reproducible set.seed(20)  # take random sample (to avoid a big table) and add the percent bars for hp # using the percentiles in the pct variable table <- data[sample(.N, 10)] |>   gt::gt() |>   nflplotR::gt_pct_bar(     \"hp\", \"pct\",     hide_col_pct = FALSE,     value_padding_left = \"10px\",   ) |>   gt::cols_align(\"left\", hp) |>   gt::cols_width(hp ~ gt::px(250))"},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Render 'gt' Table to Temporary png File — gt_render_image","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"Saves gt table temporary png image file uses magick render tables reproducible examples like reprex::reprex() package function examples (see details information).","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"","code":"gt_render_image(gt_tbl, ...)"},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"gt_tbl object class gt_tbl usually created gt::gt() ... Arguments passed webshot2::webshot() par().","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"Returns NULL invisibly.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"Rendering gt tables function examples trivial behavior underlying dependency: chromote. keeps process running even chromote session closed. Unfortunately, causes R CMD Check errors related open connections example runs. way avoid setting environment variable _R_CHECK_CONNECTIONS_LEFT_OPEN_ \"false\". depends developers check package. good way prevent example executed environment variable set \"false\" can taken source code function.","code":""},{"path":"https://nflplotr.nflverse.com/reference/gt_render_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render 'gt' Table to Temporary png File — gt_render_image","text":"","code":"tbl <- gt::gt_preview(mtcars) gt_render_image(tbl)"},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ordered NFL Team Name Factor — nfl_team_factor","title":"Create Ordered NFL Team Name Factor — nfl_team_factor","text":"Create Ordered NFL Team Name Factor","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ordered NFL Team Name Factor — nfl_team_factor","text":"","code":"nfl_team_factor(teams, ...)"},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ordered NFL Team Name Factor — nfl_team_factor","text":"teams vector NFL team abbreviations included valid_team_names(). function tries clean team names internally calling nflreadr::clean_team_abbrs(). ... One unquoted column names nflreadr::load_teams() sort . empty, function sort division nick name ascending order. intended used faceted plots team wordmarks used strip texts, .e. element_nfl_wordmark(). See examples details.","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ordered NFL Team Name Factor — nfl_team_factor","text":"Object class \"factor\"","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Ordered NFL Team Name Factor — nfl_team_factor","text":"","code":"# \\donttest{ # unsorted vector including NFL team abbreviations teams <- c(\"LAC\", \"LV\", \"CLE\", \"BAL\", \"DEN\", \"PIT\", \"CIN\", \"KC\")  # defaults to sort by division and nick name in ascending order nfl_team_factor(teams) #> [1] LAC LV  CLE BAL DEN PIT CIN KC  #> Levels: CIN < CLE < BAL < PIT < DEN < LAC < KC < LV  # can sort by every column in nflreadr::load_teams() nfl_team_factor(teams, team_abbr) #> [1] LAC LV  CLE BAL DEN PIT CIN KC  #> Levels: BAL < CIN < CLE < DEN < KC < LAC < LV < PIT  # descending order by using base::rev() nfl_team_factor(teams, rev(team_abbr)) #> [1] LAC LV  CLE BAL DEN PIT CIN KC  #> Levels: PIT < LV < LAC < KC < DEN < CLE < CIN < BAL  ######### HOW TO USE IN PRACTICE #########  library(ggplot2) # load some sample data from the ggplot2 package plot_data <- mpg # add a new column by randomly sampling the above defined teams vector plot_data$team <- sample(teams, nrow(mpg), replace = TRUE)  # Now we plot the data and facet by team abbreviation. ggplot automatically # converts the team names to a factor and sorts it alphabetically ggplot(plot_data, aes(displ, hwy)) +   geom_point() +   facet_wrap(~team, ncol = 4) +   theme_minimal()   # We'll change the order of facets by making another team name column and # converting it to an ordered factor. Again, this defaults to sort by division # and nick name in ascending order. plot_data$ordered_team <- nfl_team_factor(sample(teams, nrow(mpg), replace = TRUE))  # Let's check how the facets are ordered now. ggplot(plot_data, aes(displ, hwy)) +   geom_point() +   facet_wrap(~ordered_team, ncol = 4) +   theme_minimal()   # The facet order looks weird because the defaults is meant to be used with # NFL team wordmarks. So let's use the actual wordmarks and look at the result. ggplot(plot_data, aes(displ, hwy)) +   geom_point() +   facet_wrap(~ordered_team, ncol = 4) +   theme_minimal() +   theme(strip.text = element_nfl_wordmark())   # }"},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_tiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Create NFL Team Tiers — nfl_team_tiers","title":"Create NFL Team Tiers — nfl_team_tiers","text":"function sets ggplot visualize NFL team tiers.","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_tiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create NFL Team Tiers — nfl_team_tiers","text":"","code":"nfl_team_tiers(   data,   title = \"NFL Team Tiers, 2021 as of Week 4\",   subtitle = \"created with the #nflplotR Tiermaker\",   caption = NULL,   tier_desc = c(`1` = \"Super Bowl\", `2` = \"Very Good\", `3` = \"Medium\", `4` = \"Bad\", `5` =     \"What are they doing?\", `6` = \"\", `7` = \"\"),   presort = FALSE,   alpha = 0.8,   width = 0.075,   no_line_below_tier = NULL,   devel = FALSE )"},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_tiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create NFL Team Tiers — nfl_team_tiers","text":"data data frame include variables tier_no (number tier starting top tier . 1) team_abbr (team abbreviation). team_abbr one valid_team_names() function tries clean team names internally calling nflreadr::clean_team_abbrs(). data includes variable tier_rank, ranks used within tier. Otherwise, presort = FALSE, function assume data already sorted presort = TRUE, teams sorted alphabetically within tiers. title title plot. NULL, omitted. subtitle subtitle plot. NULL, omitted. caption caption plot. NULL, omitted. tier_desc named vector consisting tier descriptions. names must equal tier numbers tier_no presort FALSE (default) function assumes teams already sorted within tiers. otherwise sort alphabetically. alpha alpha channel logos, .e. transparency level, numerical value 0 1. width desired width logo npc (Normalised Parent Coordinates). no_line_below_tier Vector tier numbers. function draw tier separation lines tiers. intended used tiers shall combined (see examples). devel Determines logos shall rendered. FALSE (default), logos rendered run. TRUE team abbreviations plotted instead logos. much faster helps plot development.","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_tiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create NFL Team Tiers — nfl_team_tiers","text":"plot object created ggplot2::ggplot().","code":""},{"path":"https://nflplotr.nflverse.com/reference/nfl_team_tiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create NFL Team Tiers — nfl_team_tiers","text":"","code":"# \\donttest{ library(ggplot2) library(data.table) teams <- nflplotR::valid_team_names() # remove conference logos from this example teams <- teams[!teams %in% c(\"AFC\", \"NFC\", \"NFL\")] teams <- sample(teams)  # Build the team tiers data # This is completely random! dt <- data.table::data.table(   tier_no = sample(1:5, length(teams), replace = TRUE),   team_abbr = teams )[,tier_rank := sample(1:.N, .N), by = \"tier_no\"]  # Plot team tiers nfl_team_tiers(dt)   # Create a combined tier which is useful for tiers with lots of teams that # should be split up in two or more rows. This is done by setting an empty # string for the tier 5 description and removing the tier separation line # below tier number 4. # This example also shows how to turn off the subtitle and add a caption nfl_team_tiers(dt,                subtitle = NULL,                caption = \"This is the caption\",                tier_desc = c(\"1\" = \"Super Bowl\",                              \"2\" = \"Very Good\",                              \"3\" = \"Medium\",                              \"4\" = \"A Combined Tier\",                              \"5\" = \"\"),                no_line_below_tier = 4)   # For the development of the tiers, it can be useful to turn off logo image # rendering as this can take quite a long time. By setting `devel = TRUE`, the # logo images are replaced by team abbreviations which is much faster nfl_team_tiers(dt,                tier_desc = c(\"1\" = \"Super Bowl\",                              \"2\" = \"Very Good\",                              \"3\" = \"\",                              \"4\" = \"A Combined Tier\",                              \"5\" = \"\"),                no_line_below_tier = c(2, 4),                devel = TRUE)  # }"},{"path":"https://nflplotr.nflverse.com/reference/nflplotR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nflplotR: NFL Logo Plots in 'ggplot2' and 'gt' — GeomNFLheads","title":"nflplotR: NFL Logo Plots in 'ggplot2' and 'gt' — GeomNFLheads","text":"set functions visualize National Football League analysis 'ggplot2' plots 'gt' tables.","code":""},{"path":"https://nflplotr.nflverse.com/reference/nflplotR-package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nflplotR: NFL Logo Plots in 'ggplot2' and 'gt' — GeomNFLheads","text":"","code":"GeomNFLheads  GeomNFLlogo  GeomNFLwordmark"},{"path":"https://nflplotr.nflverse.com/reference/nflplotR-package.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"nflplotR: NFL Logo Plots in 'ggplot2' and 'gt' — GeomNFLheads","text":"object class GeomNFLheads (inherits Geom, ggproto, gg) length 5. object class GeomNFLlogo (inherits Geom, ggproto, gg) length 5. object class GeomNFLwordmark (inherits Geom, ggproto, gg) length 5.","code":""},{"path":[]},{"path":"https://nflplotr.nflverse.com/reference/nflplotR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nflplotR: NFL Logo Plots in 'ggplot2' and 'gt' — GeomNFLheads","text":"Maintainer: Sebastian Carl mrcaseb@gmail.com","code":""},{"path":"https://nflplotr.nflverse.com/reference/nflverse_sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Situation Report on System, nflverse Package Versions and Dependencies — nflverse_sitrep","title":"Get a Situation Report on System, nflverse Package Versions and Dependencies — nflverse_sitrep","text":"See nflreadr::nflverse_sitrep details.","code":""},{"path":"https://nflplotr.nflverse.com/reference/nflverse_sitrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Situation Report on System, nflverse Package Versions and Dependencies — nflverse_sitrep","text":"Situation report R package/dependencies.","code":""},{"path":"https://nflplotr.nflverse.com/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggpath element_path","code":""},{"path":"https://nflplotr.nflverse.com/reference/scale_nfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for NFL Team Colors — scale_nfl","title":"Scales for NFL Team Colors — scale_nfl","text":"functions map NFL team names team colors color fill aesthetics","code":""},{"path":"https://nflplotr.nflverse.com/reference/scale_nfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales for NFL Team Colors — scale_nfl","text":"","code":"scale_color_nfl(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_colour_nfl(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_fill_nfl(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"fill\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )"},{"path":"https://nflplotr.nflverse.com/reference/scale_nfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales for NFL Team Colors — scale_nfl","text":"type One \"primary\" \"secondary\" decide colortype use. values NULL (default) use internal team color vectors. Otherwise set aesthetic values map data values . values matched order (usually alphabetical) limits scale, breaks provided. named vector, values matched based names instead. Data values match given na.value. ... Arguments passed discrete_scale limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE includes levels factor. Please note display every level legend, layer use show.legend = TRUE. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. minor_breaks One : NULL minor breaks waiver() default breaks (none discrete, one minor break major break continuous) numeric vector positions function given limits returns vector minor breaks. Also accepts rlang lambda function notation. function two arguments, given limits major break positions. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. guide function used create guide name. See guides() information. call call used construct scale reporting messages. super super class use constructed scale aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output na.value aesthetic value use missing (NA) values guide function used create guide name. NULL (default) guide plotted scale. See ggplot2::guides information. alpha Factor modify color transparency via call scales::alpha. NA (default) transparency applied. Can also vector alphas. alpha levels must range [0,1].","code":""},{"path":"https://nflplotr.nflverse.com/reference/scale_nfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for NFL Team Colors — scale_nfl","text":"","code":"# \\donttest{ library(nflplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AFC\", \"NFC\", \"NFL\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr ) ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_nfl(type = \"secondary\") +   scale_fill_nfl(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # }"},{"path":"https://nflplotr.nflverse.com/reference/valid_team_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Valid NFL Team Abbreviations — valid_team_names","title":"Output Valid NFL Team Abbreviations — valid_team_names","text":"Output Valid NFL Team Abbreviations","code":""},{"path":"https://nflplotr.nflverse.com/reference/valid_team_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Valid NFL Team Abbreviations — valid_team_names","text":"","code":"valid_team_names(exclude_duplicates = TRUE)"},{"path":"https://nflplotr.nflverse.com/reference/valid_team_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Valid NFL Team Abbreviations — valid_team_names","text":"exclude_duplicates TRUE (default) list valid team abbreviations exclude duplicates related franchises moved","code":""},{"path":"https://nflplotr.nflverse.com/reference/valid_team_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Valid NFL Team Abbreviations — valid_team_names","text":"vector type \"character\".","code":""},{"path":"https://nflplotr.nflverse.com/reference/valid_team_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output Valid NFL Team Abbreviations — valid_team_names","text":"","code":"# List valid team abbreviations excluding duplicates valid_team_names() #>  [1] \"AFC\" \"ARI\" \"ATL\" \"BAL\" \"BUF\" \"CAR\" \"CHI\" \"CIN\" \"CLE\" \"DAL\" \"DEN\" \"DET\" #> [13] \"GB\"  \"HOU\" \"IND\" \"JAX\" \"KC\"  \"LA\"  \"LAC\" \"LV\"  \"MIA\" \"MIN\" \"NE\"  \"NFC\" #> [25] \"NFL\" \"NO\"  \"NYG\" \"NYJ\" \"PHI\" \"PIT\" \"SEA\" \"SF\"  \"TB\"  \"TEN\" \"WAS\"  # List valid team abbreviations excluding duplicates valid_team_names(exclude_duplicates = FALSE) #>  [1] \"AFC\" \"ARI\" \"ATL\" \"BAL\" \"BUF\" \"CAR\" \"CHI\" \"CIN\" \"CLE\" \"DAL\" \"DEN\" \"DET\" #> [13] \"GB\"  \"HOU\" \"IND\" \"JAX\" \"KC\"  \"LA\"  \"LAC\" \"LAR\" \"LV\"  \"MIA\" \"MIN\" \"NE\"  #> [25] \"NFC\" \"NFL\" \"NO\"  \"NYG\" \"NYJ\" \"OAK\" \"PHI\" \"PIT\" \"SD\"  \"SEA\" \"SF\"  \"STL\" #> [37] \"TB\"  \"TEN\" \"WAS\""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-development-version","dir":"Changelog","previous_headings":"","what":"nflplotR (development version)","title":"nflplotR (development version)","text":"Added new experimental function gt_pct_bar(). helper adds filled percentage bars ‘gt’ table add context values. (#76, #77)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-150","dir":"Changelog","previous_headings":"","what":"nflplotR 1.5.0","title":"nflplotR 1.5.0","text":"CRAN release: 2025-09-18 Rewrite theme elements S7 fully work ggplot2 v4. means nflplotR now requires ggplot2 v4! nflplotR ggplot2 extension ggplot2 version jumps make breaking changes, ’s best extension try downwards compatible. theme system now fully powered ggpath. (#73) Updated New York Jets logo () new secondary logo introduced 2024 -season. aligns logo used across nfl dot com voted poll. (#68) theme elements element_nfl_logo() element_nfl_wordmark() now clean team abbreviations calling nflreadr::clean_team_abbrs() insert empty grobs mismatches. geoms theme elements print informative warnings team abbreviation, player ID mismatches. gt logo rendering functions now add alt text accessibility silence annoying pkgdown warning. (#69) nflplotR now requires R 4.1 magick needs R version. also follows Tidyverse R version support rules. (#71)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-140","dir":"Changelog","previous_headings":"","what":"nflplotR 1.4.0","title":"nflplotR 1.4.0","text":"CRAN release: 2024-08-21 Updated New York Jets logo new design introduced 2024 -season. (#62) Drop dependency package rappdirs create optional user cache base R’s implementation. support older R versions, nflplotR now imports backports package. (#64) nflplotR v1.3.0 deprecated functions scale_x_nfl, scale_y_nfl, scale_x_nfl_headshots, scale_y_nfl_headshots, theme_x_nfl, theme_y_nfl. completely removed source now. (#64)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-131","dir":"Changelog","previous_headings":"","what":"nflplotR 1.3.1","title":"nflplotR 1.3.1","text":"CRAN release: 2024-03-25 Adjusted internals CRAN request. visible changes user. (#60)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-130","dir":"Changelog","previous_headings":"","what":"nflplotR 1.3.0","title":"nflplotR 1.3.0","text":"CRAN release: 2024-02-23","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"nflplotR 1.3.0","text":"Added new function gt_nfl_cols_label() renders logos wordmarks column labels {gt} tables. (#52)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"bug-fixes--minor-improvements-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes & Minor Improvements","title":"nflplotR 1.3.0","text":"functions geom_nfl_headshots() gt_nfl_headshots() better handle NA gsis IDs. (#48) functions gt_nfl_logos() gt_nfl_wordmarks() now keep non team name matches allow user call gt::sub_missing(). (#48) functions gt_nfl_logos() gt_nfl_wordmarks() now correctly render images gt row group labels. (#49) function geom_nfl_logos() now plots NFL logo, team_abbr == \"NFL\". (#51) function gt_nfl_cols_label() now allows rendering player headshots column labels. Thanks Steven Patton@spatto12 PR. (#55) Adjust lists documentation next R version checks correctly formatted lists. (#56) gt_nfl_logos() gt_nfl_wordmarks() now correctly allow unquoted column names columns argument. (#57)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"deprecation-1-3-0","dir":"Changelog","previous_headings":"","what":"Deprecation","title":"nflplotR 1.3.0","text":"Deprecated functions scale_x_nfl, scale_y_nfl, scale_x_nfl_headshots, scale_y_nfl_headshots, theme_x_nfl, theme_y_nfl. function slow require possibly unstable dependency. Please use far superior element_nfl_logo() friends instead. (#50)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-120","dir":"Changelog","previous_headings":"","what":"nflplotR 1.2.0","title":"nflplotR 1.2.0","text":"CRAN release: 2023-09-18","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"nflplotR 1.2.0","text":"Add new functions gt_nfl_logos() gt_nfl_wordmarks() render logos wordmarks gt() html tables. (#39) Add new function gt_nfl_headshots() render player headshots gt() html tables. (#41) Add new function gt_render_image() render gt tables image package function examples reproducible examples. (#42) Add new function nflverse_sitrep() compute nflverse related situation report.","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"breaking-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"nflplotR 1.2.0","text":"functions geom_from_path(), element_path() well ref line functions geom_mean_line() geom_median_line() outsourced ggpath package. nflplotR re-exports compatibility reasons. However, ref line functions needed modification order work properly ggplot2 scale transformations. geoms now require aesthetics x0 y0 instead v_var h_var respectively. means nflplotR break code (!) ref line geoms called v_var h_var aesthetics. hard necessary step revise irreparable mistake development original code. (#43)","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"nflplotR 1.2.0","text":"Update Eagles Commanders wordmarks latest versions NFL. (#44) Update Bears logo (’s now Bear) secondary color meet brand guidelines. (#46) Thank @Adeiko, @tanho63 questions, feedback, contributions towards release.","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-110","dir":"Changelog","previous_headings":"","what":"nflplotR 1.1.0","title":"nflplotR 1.1.0","text":"CRAN release: 2022-08-11 nflplotR internally cache images used geoms elements. cache behavior can controlled setting options(\"nflplotR.cache\") one \"memory\", \"filesystem\", \"\". possible clear cache new function .nflplotR_clear_cache(). functionality added dependencies cachem, memoise rappdirs. Resolved issue geom_mean_lines() geom_median_lines() didn’t draw lines scale transformation, e.g. scale_*_reverse(), applied. Added new function nfl_team_factor() creates ordered factors NFL team names facetted plots.","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-101","dir":"Changelog","previous_headings":"","what":"nflplotR 1.0.1","title":"nflplotR 1.0.1","text":"CRAN release: 2022-04-06 Updated internal logo wordmark files new Washington Commanders design. Fixed issues theme-elements updated examples.","code":""},{"path":"https://nflplotr.nflverse.com/news/index.html","id":"nflplotr-100","dir":"Changelog","previous_headings":"","what":"nflplotR 1.0.0","title":"nflplotR 1.0.0","text":"CRAN release: 2022-01-21 Added geom_nfl_logos() geom. Added geom_mean_lines() geom_median_lines() geoms. (v0.0.0.9002) geom_nfl_logos() now tries clean team abbreviations calling nflreadr::clean_team_abbrs() Added color fill scales scale_color_nfl() scale_fill_nfl(). (v0.0.0.9003) Added axis scales scale_x_nfl() scale_y_nfl() combination theme update functions theme_x_nfl() theme_y_nfl(). (v0.0.0.9004) Fixed incompatible position argument scale_y_nfl(). (v.0.0.9005) Added function ggpreview() allows preview ggplot ’s actual dimensions. (v.0.0.9006) geom_nfl_logos() now supports colour aesthetic colorizes logos. (v0.0.9007) Added function nfl_team_tiers() build NFL team tiers ggplot, thanks Timo Riske suggestion. (v.0.0.9008) Fixed bug (#10) geom_median_lines() geom_mean_lines() caused alpha work properly. (v.0.0.9009) Improved nfl_team_tiers() adding opportunity modify title, subtitle, caption plot. Added functionality remove tier separation lines combined tiers. Added functionality run function “developer” mode means, team abbreviations plotted instead logos (much faster). (v.0.0.9010) Added geom_nfl_headshots() geom plots headshots valid gsis IDs. (v0.0.9011) Added axis scales scale_x_nfl_headshots() scale_y_nfl_headshots(). (v.0.0.9012) Updated internal data use new team colors nflfastR. (v.0.0.9013) Added geom_nfl_wordmarks() geom plots NFL wordmarks using valid team abbreviations. (v.0.0.9014) Added geom_from_path() geom plots images urls, local paths . (v.0.0.9015) Added ggplot2 theme-elements element_nfl_logo(), element_nfl_wordmark(), element_nfl_headshot(), element_path() translate NFL team abbreviations player IDs team logos player headshots. elements feature major speed improvement axis scales scale_x_nfl_headshots() scale_y_nfl_headshots() make package less dependent underlying package. (v.0.0.0.9016)","code":""}]
